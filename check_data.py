#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase
"""
import os
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cska_django_supabase.settings')
django.setup()

def check_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ"""
    from django.contrib.auth.models import User
    from core.models import Athlete, Parent, TrainingGroup, Staff, Trainer, PaymentMethod
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        user_count = User.objects.count()
        athlete_count = Athlete.objects.count()
        parent_count = Parent.objects.count()
        group_count = TrainingGroup.objects.count()
        staff_count = Staff.objects.count()
        trainer_count = Trainer.objects.count()
        payment_method_count = PaymentMethod.objects.count()
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:")
        print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}")
        print(f"  - –°–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤: {athlete_count}")
        print(f"  - –†–æ–¥–∏—Ç–µ–ª–µ–π: {parent_count}")
        print(f"  - –ì—Ä—É–ø–ø: {group_count}")
        print(f"  - –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {staff_count}")
        print(f"  - –¢—Ä–µ–Ω–µ—Ä–æ–≤: {trainer_count}")
        print(f"  - –°–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã: {payment_method_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        if user_count > 0:
            print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            for user in User.objects.all()[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 5
                print(f"  - {user.username} ({user.first_name} {user.last_name})")
        
        if athlete_count > 0:
            print(f"\n‚öΩ –°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã:")
            for athlete in Athlete.objects.all()[:5]:
                print(f"  - {athlete}")
        
        if parent_count > 0:
            print(f"\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ –†–æ–¥–∏—Ç–µ–ª–∏:")
            for parent in Parent.objects.all()[:5]:
                print(f"  - {parent}")
        
        if group_count > 0:
            print(f"\nüèÉ –ì—Ä—É–ø–ø—ã:")
            for group in TrainingGroup.objects.all()[:5]:
                print(f"  - {group}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    check_data()
