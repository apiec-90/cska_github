import os
from dotenv import load_dotenv
load_dotenv()
"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-as4^0st8x+y_=!*1h75p7kxi^q!+0&0xqr-^lvw&nay4fyh85d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Разрешаем доступ из любых хостов для тестирования сервера
# В продакшене нужно указать конкретные домены
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
<<<<<<< HEAD:sportcrm/settings.py
    # Third party apps
    'tailwind',
    'django_browser_reload',
    # 'django_filters',  # Временно отключен для тестирования миграций
    'storages',
=======
    # Сторонние приложения
    'tailwind',
    'sporttheme',  # Приложение для Tailwind темы
    'theme',  # Дополнительное приложение
    'django_browser_reload',  # Автообновление браузера при разработке
    'django_filters',  # Фильтрация данных
    'storages',  # Для работы с внешними хранилищами (Supabase Storage)
    
    # Собственные приложения
    'core',  # Базовая структура
    'groups',  # Управление спортивными группами
    'athletes',  # Спортсмены и их документы
    'attendance',  # Посещаемость
    'payments',  # Оплата
>>>>>>> c61a5f36:config/settings.py
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # Middleware для локализации
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
<<<<<<< HEAD:sportcrm/settings.py
    'django_browser_reload.middleware.BrowserReloadMiddleware',
=======
    'django_browser_reload.middleware.BrowserReloadMiddleware',  # Автообновление браузера
>>>>>>> c61a5f36:config/settings.py
]

ROOT_URLCONF = 'sportcrm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Папка для общих шаблонов
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',  # Для работы с медиа в шаблонах
            ],
        },
    },
]

WSGI_APPLICATION = 'sportcrm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres.gzrefdsqgynnvdodubiu',
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': 'aws-0-eu-north-1.pooler.supabase.com',
        'PORT': '6543',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Интернационализация
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'  # Русский язык по умолчанию

TIME_ZONE = 'Europe/Moscow'  # Московское время

USE_I18N = True  # Включение интернационализации

USE_L10N = True  # Включение локализации форматов

USE_TZ = True  # Использование часовых поясов

# Поддерживаемые языки
LANGUAGES = [
    ('ru', 'Russian'),
    ('en', 'English'),
]

# Путь к файлам переводов
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Папка для собранных статических файлов
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Папка для статических файлов проекта
]

# Media files (файлы загружаемые пользователями)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'  # Папка для медиа файлов

# Настройки Tailwind
TAILWIND_APP_NAME = 'sporttheme'  # Название приложения для Tailwind темы
INTERNAL_IPS = [
    "127.0.0.1",  # Для django-browser-reload
]

# Настройки Node.js для Tailwind (локальная копия в проекте)
NPM_BIN_PATH = BASE_DIR / "nodejs" / "npm.cmd"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
