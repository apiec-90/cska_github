import os
from supabase import create_client
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
SUPABASE_STORAGE_BUCKET = "media"  # –ò–º—è bucket –≤ Supabase
UPLOAD_FOLDER = "media"  # –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏

def upload_to_supabase():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Supabase Storage"""
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    supabase_url = os.getenv("SUPABASE_URL", "https://gzrefdsqgynnvdodubiu.supabase.co")
    supabase_key = os.getenv("SUPABASE_KEY", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd6cmVmZHNxZ3lubnZkb2R1Yml1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4NjA3NzUsImV4cCI6MjA2OTQzNjc3NX0.cSowcQkvY5uEb20pkNWuA0LxYfX0VJfd6maCxjCKcg0")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
        supabase = create_client(supabase_url, supabase_key)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å bucket –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö buckets
        try:
            buckets = supabase.storage.list_buckets()
            print(f"üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ buckets: {[b.name for b in buckets]}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ buckets: {e}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {e}")
        return
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ - –ø–æ–ª—É—á–∞–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bucket_name = os.getenv("SUPABASE_STORAGE_BUCKET", SUPABASE_STORAGE_BUCKET)  # –ò–º—è bucket –≤ Supabase
    upload_folder = os.getenv("UPLOAD_FOLDER", UPLOAD_FOLDER)  # –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   Bucket: '{bucket_name}'")
    print(f"   –ü–∞–ø–∫–∞: '{upload_folder}'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏
    if not os.path.exists(upload_folder):
        print(f"‚ùå –ü–∞–ø–∫–∞ {upload_folder} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print(f"üí° –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É '{upload_folder}' –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ UPLOAD_FOLDER –≤ .env")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ bucket –≤ Supabase
    try:
        supabase.storage.get_bucket(bucket_name)
        print(f"‚úÖ Bucket '{bucket_name}' –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå Bucket '{bucket_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        print(f"üí° –°–æ–∑–¥–∞–π—Ç–µ bucket '{bucket_name}' –≤ Supabase Dashboard")
        print("üí° –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ SUPABASE_STORAGE_BUCKET –≤ .env")
        return
    
    print(f"üìÅ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏: {upload_folder}")
    
    # –û–±—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ –∏ –ø–æ–¥–ø–∞–ø–∫–∞—Ö
    uploaded_count = 0
    error_count = 0
    
    for root, _, files in os.walk(upload_folder):
        for file in files:
            file_path = os.path.join(root, file)
            relative_path = os.path.relpath(file_path, upload_folder)
            
            try:
                # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ Supabase
                with open(file_path, "rb") as f:
                    # –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª–µ—à–∏ –Ω–∞ –ø—Ä—è–º—ã–µ –¥–ª—è Supabase (–ø—Ä–æ–±–ª–µ–º–∞ Windows)
                    supabase_path = relative_path.replace("\\", "/")
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
                    supabase.storage.from_(bucket_name).upload(supabase_path, f.read())
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {supabase_path}")
                    uploaded_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {relative_path}: {e}")
                error_count += 1
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:")
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {uploaded_count} —Ñ–∞–π–ª–æ–≤")
    print(f"‚ùå –û—à–∏–±–æ–∫: {error_count} —Ñ–∞–π–ª–æ–≤")

def create_bucket_if_not_exists():
    """–°–æ–∑–¥–∞–Ω–∏–µ bucket –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    supabase_url = os.getenv("SUPABASE_URL", "https://gzrefdsqgynnvdodubiu.supabase.co")
    supabase_key = os.getenv("SUPABASE_KEY", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd6cmVmZHNxZ3lubnZkb2R1Yml1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4NjA3NzUsImV4cCI6MjA2OTQzNjc3NX0.cSowcQkvY5uEb20pkNWuA0LxYfX0VJfd6maCxjCKcg0")
    
    try:
        supabase = create_client(supabase_url, supabase_key)
        bucket_name = os.getenv("SUPABASE_STORAGE_BUCKET", SUPABASE_STORAGE_BUCKET)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ bucket
        try:
            supabase.storage.get_bucket(bucket_name)
            print(f"‚úÖ Bucket '{bucket_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return True
        except Exception:
            print(f"üîÑ –°–æ–∑–¥–∞–µ–º bucket '{bucket_name}'...")
            
            # –°–æ–∑–¥–∞–µ–º bucket –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ public (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)
            try:
                supabase.storage.create_bucket(bucket_name)
                print(f"‚úÖ Bucket '{bucket_name}' —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
                return True
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å bucket: {e}")
                print("üí° –°–æ–∑–¥–∞–π—Ç–µ bucket –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_bucket_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ bucket"""
    supabase_url = os.getenv("SUPABASE_URL", "https://gzrefdsqgynnvdodubiu.supabase.co")
    supabase_key = os.getenv("SUPABASE_KEY", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd6cmVmZHNxZ3lubnZkb2R1Yml1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4NjA3NzUsImV4cCI6MjA2OTQzNjc3NX0.cSowcQkvY5uEb20pkNWuA0LxYfX0VJfd6maCxjCKcg0")
    
    try:
        supabase = create_client(supabase_url, supabase_key)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö buckets
        buckets = supabase.storage.list_buckets()
        print(f"üì¶ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ buckets: {[b.name for b in buckets]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–µ–≤–æ–π bucket
        bucket_name = os.getenv("SUPABASE_STORAGE_BUCKET", SUPABASE_STORAGE_BUCKET)
        try:
            supabase.storage.get_bucket(bucket_name)
            print(f"‚úÖ Bucket '{bucket_name}' –Ω–∞–π–¥–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        except Exception as e:
            print(f"‚ùå Bucket '{bucket_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Supabase Uploader...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å bucket
    if check_bucket_status():
        # –ó–∞—Ç–µ–º –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
        upload_to_supabase()
    else:
        print("‚ùå Bucket –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase.")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ bucket –≤ Supabase Dashboard –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ SUPABASE_STORAGE_BUCKET")