#!/usr/bin/env python
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cska_django_supabase.settings')
django.setup()

from core.forms import (
    TrainingGroupForm, AuthAccountForm, StaffForm, ParentForm, 
    AthleteForm, PaymentForm, PaymentMethodForm, DocumentForm,
    DocumentTypeForm, TrainingSessionForm, GroupScheduleForm, AttendanceRecordForm
)
from core.models import (
    TrainingGroup, AuthAccount, Staff, Parent, Athlete, 
    Payment, PaymentMethod, Document, DocumentType,
    TrainingSession, GroupSchedule, AttendanceRecord
)


def test_forms_import():
    """
    –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —Ñ–æ—Ä–º
    """
    print("üéØ –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —Ñ–æ—Ä–º")
    print("=" * 50)
    
    forms_to_test = [
        ('TrainingGroupForm', TrainingGroupForm),
        ('AuthAccountForm', AuthAccountForm),
        ('StaffForm', StaffForm),
        ('ParentForm', ParentForm),
        ('AthleteForm', AthleteForm),
        ('PaymentForm', PaymentForm),
        ('PaymentMethodForm', PaymentMethodForm),
        ('DocumentForm', DocumentForm),
        ('DocumentTypeForm', DocumentTypeForm),
        ('TrainingSessionForm', TrainingSessionForm),
        ('GroupScheduleForm', GroupScheduleForm),
        ('AttendanceRecordForm', AttendanceRecordForm),
    ]
    
    success_count = 0
    total_count = len(forms_to_test)
    
    for form_name, form_class in forms_to_test:
        try:
            form = form_class()
            print(f"‚úÖ {form_name}: —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
            print(f"   –ü–æ–ª—è: {list(form.fields.keys())}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–ª–µ–π –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
            archive_fields = ['is_archived', 'archived_at', 'archived_by']
            found_archive_fields = [field for field in archive_fields if field in form.fields]
            
            if found_archive_fields:
                print(f"   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è: {found_archive_fields}")
            else:
                print(f"   ‚úÖ –ü–æ–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            
            success_count += 1
            
        except Exception as e:
            print(f"‚ùå {form_name}: –æ—à–∏–±–∫–∞ - {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{total_count} —Ñ–æ—Ä–º —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    return success_count == total_count


def test_models_import():
    """
    –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
    """
    print("\nüéØ –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π")
    print("=" * 50)
    
    models_to_test = [
        ('TrainingGroup', TrainingGroup),
        ('AuthAccount', AuthAccount),
        ('Staff', Staff),
        ('Parent', Parent),
        ('Athlete', Athlete),
        ('Payment', Payment),
        ('PaymentMethod', PaymentMethod),
        ('Document', Document),
        ('DocumentType', DocumentType),
        ('TrainingSession', TrainingSession),
        ('GroupSchedule', GroupSchedule),
        ('AttendanceRecord', AttendanceRecord),
    ]
    
    success_count = 0
    total_count = len(models_to_test)
    
    for model_name, model_class in models_to_test:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∞
            print(f"‚úÖ {model_name}: –º–æ–¥–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞")
            print(f"   –ü–æ–ª—è: {[field.name for field in model_class._meta.fields]}")
            success_count += 1
            
        except Exception as e:
            print(f"‚ùå {model_name}: –æ—à–∏–±–∫–∞ - {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{total_count} –º–æ–¥–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    return success_count == total_count


def test_archive_functionality():
    """
    –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("\nüéØ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏ —Å –ø–æ–ª—è–º–∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    archive_models = [
        ('Staff', Staff),
        ('Parent', Parent),
        ('Athlete', Athlete),
        ('TrainingGroup', TrainingGroup),
        ('Payment', Payment),
        ('Document', Document),
    ]
    
    for model_name, model_class in archive_models:
        fields = [field.name for field in model_class._meta.fields]
        archive_fields = ['is_archived', 'archived_at', 'archived_by']
        
        missing_fields = [field for field in archive_fields if field not in fields]
        
        if missing_fields:
            print(f"‚ùå {model_name}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è {missing_fields}")
        else:
            print(f"‚úÖ {model_name}: –≤—Å–µ –ø–æ–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—ã
    forms_ok = test_forms_import()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
    models_ok = test_models_import()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_archive_functionality()
    
    print("\n" + "=" * 60)
    if forms_ok and models_ok:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    else:
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫") 