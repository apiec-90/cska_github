#!/usr/bin/env python
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∫–∏ Django
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
"""

import os
import sys
import django
from django.test import TestCase, Client
from django.contrib.auth.models import User, Group
from django.urls import reverse
from django.core.management.base import BaseCommand

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cska_project.settings')
django.setup()

from core.models import (
    Athlete, Parent, Trainer, Staff, 
    TrainingGroup, GroupSchedule, TrainingSession,
    AthleteParent, AthleteTrainingGroup, AttendanceRecord,
    Payment, Document, DocumentType, AuditRecord,
    RegistrationDraft
)


class AdminFunctionalityTest:
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∫–∏"""
    
    def __init__(self):
        self.client = Client()
        self.superuser = None
        
    def setup(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"""
        print("üîß –ü–û–î–ì–û–¢–û–í–ö–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.superuser = User.objects.filter(is_superuser=True).first()
        if self.superuser:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {self.superuser.username}")
        else:
            print("‚ùå –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
            
        # –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ –∞–¥–º–∏–Ω–∫—É
        login_success = self.client.force_login(self.superuser)
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        return True
    
    def test_admin_models_access(self):
        """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥–µ–ª—è–º –≤ –∞–¥–º–∏–Ω–∫–µ"""
        print("\nüè† –¢–ï–°–¢ –î–û–°–¢–£–ü–ê –ö –ê–î–ú–ò–ù–°–ö–ò–ú –ú–û–î–ï–õ–Ø–ú")
        print("=" * 50)
        
        models_to_test = [
            ('core', 'athlete', '–°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã'),
            ('core', 'parent', '–†–æ–¥–∏—Ç–µ–ª–∏'),
            ('core', 'trainer', '–¢—Ä–µ–Ω–µ—Ä—ã'),
            ('core', 'staff', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏'),
            ('core', 'traininggroup', '–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ –≥—Ä—É–ø–ø—ã'),
            ('core', 'attendancerecord', '–ó–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏'),
            ('core', 'payment', '–ü–ª–∞—Ç–µ–∂–∏'),
            ('core', 'document', '–î–æ–∫—É–º–µ–Ω—Ç—ã'),
        ]
        
        success_count = 0
        for app, model, name in models_to_test:
            try:
                url = reverse(f'admin:{app}_{model}_changelist')
                response = self.client.get(url)
                if response.status_code == 200:
                    print(f"   ‚úÖ {name}: –¥–æ—Å—Ç—É–ø OK")
                    success_count += 1
                else:
                    print(f"   ‚ùå {name}: –æ—à–∏–±–∫–∞ {response.status_code}")
            except Exception as e:
                print(f"   ‚ùå {name}: –∏—Å–∫–ª—é—á–µ–Ω–∏–µ {e}")
        
        print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{len(models_to_test)} –º–æ–¥–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω—ã")
        return success_count == len(models_to_test)
    
    def test_user_operations(self):
        """–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
        print("\nüë• –¢–ï–°–¢ –û–ü–ï–†–ê–¶–ò–ô –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò")
        print("=" * 50)
        
        issues = []
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            # –°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã
            url = reverse('admin:core_athlete_changelist')
            response = self.client.get(url)
            athletes_count = response.context['cl'].result_count if response.status_code == 200 else 0
            print(f"   üìã –°–ø–∏—Å–æ–∫ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤: {athletes_count} –∑–∞–ø–∏—Å–µ–π")
            
            # –†–æ–¥–∏—Ç–µ–ª–∏
            url = reverse('admin:core_parent_changelist')
            response = self.client.get(url)
            parents_count = response.context['cl'].result_count if response.status_code == 200 else 0
            print(f"   üìã –°–ø–∏—Å–æ–∫ —Ä–æ–¥–∏—Ç–µ–ª–µ–π: {parents_count} –∑–∞–ø–∏—Å–µ–π")
            
            # –¢—Ä–µ–Ω–µ—Ä—ã
            url = reverse('admin:core_trainer_changelist')
            response = self.client.get(url)
            trainers_count = response.context['cl'].result_count if response.status_code == 200 else 0
            print(f"   üìã –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä–æ–≤: {trainers_count} –∑–∞–ø–∏—Å–µ–π")
            
            # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
            url = reverse('admin:core_staff_changelist')
            response = self.client.get(url)
            staff_count = response.context['cl'].result_count if response.status_code == 200 else 0
            print(f"   üìã –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {staff_count} –∑–∞–ø–∏—Å–µ–π")
            
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤: {e}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞
        try:
            athlete = Athlete.objects.first()
            if athlete:
                url = reverse('admin:core_athlete_change', args=[athlete.id])
                response = self.client.get(url)
                if response.status_code == 200:
                    print(f"   ‚úèÔ∏è –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞: OK")
                else:
                    issues.append(f"–§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞: –æ—à–∏–±–∫–∞ {response.status_code}")
            else:
                issues.append("–ù–µ—Ç —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—ã
        try:
            url = reverse('admin:core_traininggroup_changelist')
            response = self.client.get(url)
            groups_count = response.context['cl'].result_count if response.status_code == 200 else 0
            print(f"   üèÜ –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ –≥—Ä—É–ø–ø—ã: {groups_count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–ø–ø: {e}")
        
        if issues:
            print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
            for issue in issues:
                print(f"   - {issue}")
            return False
        else:
            print("\n‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
    
    def test_relationships(self):
        """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≤—è–∑–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ"""
        print("\nüîó –¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –°–í–Ø–ó–ï–ô")
        print("=" * 50)
        
        issues = []
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤—è–∑–µ–π —Ä–æ–¥–∏—Ç–µ–ª—å-—Å–ø–æ—Ä—Ç—Å–º–µ–Ω
        try:
            parent = Parent.objects.first()
            if parent:
                children = parent.get_children()
                print(f"   üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –£ —Ä–æ–¥–∏—Ç–µ–ª—è {parent}: {children.count()} –¥–µ—Ç–µ–π")
            else:
                issues.append("–ù–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–µ–π")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–µ–π —Ä–æ–¥–∏—Ç–µ–ª—å-–¥–µ—Ç–∏: {e}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä—É–ø–ø —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤
        try:
            athlete = Athlete.objects.first()
            if athlete:
                groups = athlete.athletetraininggroup_set.all()
                print(f"   üèÉ –£ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞ {athlete}: {groups.count()} –≥—Ä—É–ø–ø")
            else:
                issues.append("–ù–µ—Ç —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—ã –∏ –∏—Ö —Å–æ—Å—Ç–∞–≤
        try:
            for group in TrainingGroup.objects.all():
                athletes_count = group.get_athletes_count()
                print(f"   üèÜ –ì—Ä—É–ø–ø–∞ '{group.name}': {athletes_count} —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–∞–≤–∞ –≥—Ä—É–ø–ø: {e}")
        
        if issues:
            print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–≤—è–∑—è–º–∏:")
            for issue in issues:
                print(f"   - {issue}")
            return False
        else:
            print("\n‚úÖ –í—Å–µ —Å–≤—è–∑–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
    
    def test_schedule_functionality(self):
        """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
        print("\nüìÖ –¢–ï–°–¢ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –†–ê–°–ü–ò–°–ê–ù–ò–Ø")
        print("=" * 50)
        
        issues = []
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø
            for group in TrainingGroup.objects.all():
                schedules = group.groupschedule_set.all()
                sessions = group.trainingsession_set.all()
                print(f"   üìÖ –ì—Ä—É–ø–ø–∞ '{group.name}': {schedules.count()} —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π, {sessions.count()} —Å–µ—Å—Å–∏–π")
                
                if schedules.count() == 0:
                    issues.append(f"–£ –≥—Ä—É–ø–ø—ã '{group.name}' –Ω–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –∫–∞–∂–¥–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞
                for schedule in schedules:
                    if not schedule.start_time or not schedule.end_time:
                        issues.append(f"–£ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã '{group.name}' –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π: {e}")
        
        if issues:
            print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º:")
            for issue in issues:
                print(f"   - {issue}")
            return False
        else:
            print("\n‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
    
    def test_data_integrity(self):
        """–¢–µ—Å—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö"""
        print("\nüîç –¢–ï–°–¢ –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–•")
        print("=" * 50)
        
        issues = []
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏
        try:
            users_without_profiles = []
            for user in User.objects.filter(is_superuser=False):
                has_profile = (
                    hasattr(user, 'athlete') or
                    hasattr(user, 'parent') or 
                    hasattr(user, 'trainer') or
                    hasattr(user, 'staff')
                )
                if not has_profile:
                    users_without_profiles.append(user.username)
            
            if users_without_profiles:
                issues.append(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π: {', '.join(users_without_profiles)}")
            else:
                print("   ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –ø—Ä–æ—Ñ–∏–ª–∏")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—ã Django
        try:
            expected_groups = ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã', '–†–æ–¥–∏—Ç–µ–ª–∏', '–¢—Ä–µ–Ω–µ—Ä—ã', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏', '–ú–µ–Ω–µ–¥–∂–µ—Ä—ã']
            existing_groups = list(Group.objects.values_list('name', flat=True))
            
            missing_groups = [g for g in expected_groups if g not in existing_groups]
            if missing_groups:
                issues.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≥—Ä—É–ø–ø—ã: {', '.join(missing_groups)}")
            else:
                print("   ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≥—Ä—É–ø–ø—ã Django —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—ã
            users_without_groups = User.objects.filter(groups__isnull=True, is_superuser=False).count()
            if users_without_groups > 0:
                issues.append(f"{users_without_groups} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –≤ –≥—Ä—É–ø–ø–∞—Ö")
            else:
                print("   ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—ã")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø Django: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º AthleteParent
            orphaned_relations = []
            for ap in AthleteParent.objects.all():
                if not ap.athlete_id or not ap.parent_id:
                    orphaned_relations.append(f"AthleteParent {ap.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º AthleteTrainingGroup
            for atg in AthleteTrainingGroup.objects.all():
                if not atg.athlete_id or not atg.training_group_id:
                    orphaned_relations.append(f"AthleteTrainingGroup {atg.id}")
            
            if orphaned_relations:
                issues.append(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–≤—è–∑–∏: {', '.join(orphaned_relations)}")
            else:
                print("   ‚úÖ –í—Å–µ —Å–≤—è–∑–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        except Exception as e:
            issues.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–µ–π: {e}")
        
        if issues:
            print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏:")
            for issue in issues:
                print(f"   - {issue}")
            return False
        else:
            print("\n‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ—Ä—è–¥–∫–µ")
            return True
    
    def run_full_test(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"""
        print("üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢ –ê–î–ú–ò–ù–ö–ò")
        print("=" * 60)
        
        if not self.setup():
            print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
            return False
        
        tests = [
            ('–î–æ—Å—Ç—É–ø –∫ –º–æ–¥–µ–ª—è–º', self.test_admin_models_access),
            ('–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', self.test_user_operations),
            ('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤—è–∑–µ–π', self.test_relationships),
            ('–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', self.test_schedule_functionality),
            ('–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö', self.test_data_integrity),
        ]
        
        passed_tests = 0
        total_tests = len(tests)
        
        for test_name, test_func in tests:
            try:
                if test_func():
                    passed_tests += 1
            except Exception as e:
                print(f"\n‚ùå –¢–µ—Å—Ç '{test_name}' –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print(f"\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("=" * 60)
        
        if passed_tests == total_tests:
            print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print(f"‚úÖ {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
            print("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        else:
            print(f"‚ö†Ô∏è –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –ß–ê–°–¢–ò–ß–ù–û")
            print(f"‚úÖ {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
            print(f"‚ùå {total_tests - passed_tests} —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        return passed_tests == total_tests


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    tester = AdminFunctionalityTest()
    success = tester.run_full_test()
    
    if success:
        print("\n" + "=" * 60)
        print("üéä –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –†–ï–§–ê–ö–¢–û–†–ò–ù–ì –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!")
        print("=" * 60)
        print("‚úÖ –ê–¥–º–∏–Ω–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞")
        print("‚úÖ –í—Å–µ —Å–≤—è–∑–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print("\nüîó –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ: http://127.0.0.1:8000/admin/")
        print("üë§ –õ–æ–≥–∏–Ω: admin")
        print("üîë –ü–∞—Ä–æ–ª—å: (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–æ–ª—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)")
    else:
        print("\n" + "=" * 60)
        print("‚ö†Ô∏è –†–ï–§–ê–ö–¢–û–†–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –° –ó–ê–ú–ï–ß–ê–ù–ò–Ø–ú–ò")
        print("=" * 60)
        print("–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á–µ—Ç –≤—ã—à–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.")


if __name__ == '__main__':
    main()