# Generated by Django 5.2.4 on 2025-08-08 14:22

from django.db import migrations, models


def _dedupe_phones(apps, schema_editor):
    """Очистка дубликатов телефонов перед установкой unique=True.
    Оставляем первый, остальные ставим NULL. Пустые строки -> NULL.
    """
    from django.db.models import Count
    Athlete = apps.get_model('core', 'Athlete')
    Parent = apps.get_model('core', 'Parent')

    for Model in (Athlete, Parent):
        # Пустые строки в NULL
        try:
            Model.objects.filter(phone='').update(phone=None)
        except Exception:
            pass
        # Ищем дубликаты
        dups = (
            Model.objects
            .values('phone')
            .annotate(c=Count('id'))
            .filter(phone__isnull=False)
            .filter(c__gt=1)
        )
        for row in dups:
            phone = row['phone']
            ids = list(Model.objects.filter(phone=phone).order_by('id').values_list('id', flat=True))
            # сохраняем первый, остальные NULL
            for dup_id in ids[1:]:
                Model.objects.filter(id=dup_id).update(phone=None)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_athlete_phone_parent_phone'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='staff',
            name='description',
        ),
        migrations.AddField(
            model_name='athlete',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия'),
        ),
        migrations.AddField(
            model_name='parent',
            name='birth_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AddField(
            model_name='staff',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя'),
        ),
        migrations.AddField(
            model_name='staff',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия'),
        ),
        # 1) сначала разрешаем NULL без уникальности
        migrations.AlterField(
            model_name='athlete',
            name='phone',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='parent',
            name='phone',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Телефон'),
        ),
        # 2) чистим дубликаты/пустые
        migrations.RunPython(_dedupe_phones, migrations.RunPython.noop),
        # 3) включаем уникальность
        migrations.AlterField(
            model_name='athlete',
            name='phone',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='parent',
            name='phone',
            field=models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='Телефон'),
        ),
    ]
