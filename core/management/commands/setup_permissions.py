from django.core.management.base import BaseCommand
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø'

    def handle(self, *args, **options):
        self.stdout.write('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø...')
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ content types
        content_types = ContentType.objects.all()
        permission_map = {}
        
        for ct in content_types:
            model_name = ct.model
            app_label = ct.app_label
            
            # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
            for action in ['add', 'change', 'delete', 'view']:
                codename = f'{action}_{model_name}'
                try:
                    perm = Permission.objects.get(
                        content_type=ct,
                        codename=codename
                    )
                    permission_map[codename] = perm
                except Permission.DoesNotExist:
                    pass
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –ú–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        manager_permissions = [
            'add_staff', 'change_staff', 'delete_staff', 'view_staff',
            'add_athlete', 'change_athlete', 'delete_athlete', 'view_athlete',
            'add_trainer', 'change_trainer', 'delete_trainer', 'view_trainer',
            'add_parent', 'change_parent', 'delete_parent', 'view_parent',
            'add_document', 'change_document', 'delete_document', 'view_document',
            'add_traininggroup', 'change_traininggroup', 'delete_traininggroup', 'view_traininggroup',
        ]
        
        try:
            managers_group = Group.objects.get(name='–ú–µ–Ω–µ–¥–∂–µ—Ä—ã')
            permissions_to_add = []
            for perm_codename in manager_permissions:
                if perm_codename in permission_map:
                    permissions_to_add.append(permission_map[perm_codename])
            
            managers_group.permissions.set(permissions_to_add)
            self.stdout.write(f'‚úì –ù–∞–∑–Ω–∞—á–µ–Ω–æ {len(permissions_to_add)} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –≥—Ä—É–ø–ø–µ "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã"')
        except Group.DoesNotExist:
            self.stdout.write('‚ö† –ì—Ä—É–ø–ø–∞ "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è)
        try:
            admins_group = Group.objects.get(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã')
            all_permissions = list(permission_map.values())
            admins_group.permissions.set(all_permissions)
            self.stdout.write(f'‚úì –ù–∞–∑–Ω–∞—á–µ–Ω–æ {len(all_permissions)} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –≥—Ä—É–ø–ø–µ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"')
        except Group.DoesNotExist:
            self.stdout.write('‚ö† –ì—Ä—É–ø–ø–∞ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–≤ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ)
        accountant_permissions = [
            'view_staff', 'view_athlete', 'view_trainer', 'view_parent',
            'view_document', 'view_traininggroup',
            'add_document', 'change_document',
        ]
        
        try:
            accountants_group = Group.objects.get(name='–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—ã')
            permissions_to_add = []
            for perm_codename in accountant_permissions:
                if perm_codename in permission_map:
                    permissions_to_add.append(permission_map[perm_codename])
            
            accountants_group.permissions.set(permissions_to_add)
            self.stdout.write(f'‚úì –ù–∞–∑–Ω–∞—á–µ–Ω–æ {len(permissions_to_add)} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –≥—Ä—É–ø–ø–µ "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—ã"')
        except Group.DoesNotExist:
            self.stdout.write('‚ö† –ì—Ä—É–ø–ø–∞ "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        
        self.stdout.write(
            self.style.SUCCESS(
                '\n‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!\n'
                'üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ—Å—Ç—É–ø–∞:\n'
                '  ‚Ä¢ –ú–µ–Ω–µ–¥–∂–µ—Ä—ã: –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–∞–Ω–Ω—ã–º–∏\n'
                '  ‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É\n'
                '  ‚Ä¢ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä—ã: –ø—Ä–æ—Å–º–æ—Ç—Ä + —Ä–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏\n'
                '  ‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã: –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è)'
            )
        )











