"""
Django management command –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤ —Å Supabase Storage
"""
import os
from django.core.management.base import BaseCommand
from django.conf import settings
from core.utils.supabase_storage import upload_to_supabase_storage, get_supabase_file_url
from core.models import Document, DocumentType


class Command(BaseCommand):
    help = '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤ —Å Supabase Storage'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –Ω–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å',
        )

    def handle(self, *args, **options):
        dry_run = options['dry_run']
        
        if dry_run:
            self.stdout.write(self.style.WARNING('üîç –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (dry-run)'))
        
        self.stdout.write('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∞–≤–∞—Ç–∞—Ä–æ–≤ —Å Supabase Storage...')
        
        # –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –∞–≤–∞—Ç–∞—Ä–∞–º
        avatars_path = os.path.join(settings.MEDIA_ROOT, 'avatars')
        
        if not os.path.exists(avatars_path):
            self.stdout.write(self.style.ERROR(f'‚ùå –ü–∞–ø–∫–∞ {avatars_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'))
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∞–≤–∞—Ç–∞—Ä–æ–≤
        avatar_files = []
        for filename in os.listdir(avatars_path):
            if filename.lower().endswith(('.jpg', '.jpeg', '.png', '.gif')):
                avatar_files.append(filename)
        
        self.stdout.write(f'üìÅ –ù–∞–π–¥–µ–Ω–æ {len(avatar_files)} —Ñ–∞–π–ª–æ–≤ –∞–≤–∞—Ç–∞—Ä–æ–≤')
        
        if not avatar_files:
            self.stdout.write(self.style.SUCCESS('‚úÖ –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏'))
            return
        
        uploaded_count = 0
        error_count = 0
        
        for filename in avatar_files:
            file_path = os.path.join(avatars_path, filename)
            supabase_path = f'avatars/{filename}'
            
            if dry_run:
                self.stdout.write(f'  üìã –ë—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω: {filename} ‚Üí {supabase_path}')
                continue
            
            try:
                # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
                with open(file_path, 'rb') as f:
                    file_data = f.read()
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Supabase
                success, result = upload_to_supabase_storage(file_data, supabase_path)
                
                if success:
                    self.stdout.write(
                        self.style.SUCCESS(f'  ‚úÖ {filename} ‚Üí Supabase Storage')
                    )
                    uploaded_count += 1
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                    self._update_document_records(filename, result)
                    
                else:
                    self.stdout.write(
                        self.style.ERROR(f'  ‚ùå {filename}: {result}')
                    )
                    error_count += 1
                    
            except Exception as e:
                self.stdout.write(
                    self.style.ERROR(f'  ‚ùå {filename}: {str(e)}')
                )
                error_count += 1
        
        if not dry_run:
            self.stdout.write('')
            self.stdout.write(f'üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:')
            self.stdout.write(f'  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {uploaded_count} —Ñ–∞–π–ª–æ–≤')
            self.stdout.write(f'  ‚ùå –û—à–∏–±–æ–∫: {error_count} —Ñ–∞–π–ª–æ–≤')
            
            if uploaded_count > 0:
                self.stdout.write('')
                self.stdout.write(self.style.SUCCESS('üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))
                self.stdout.write('üí° –¢–µ–ø–µ—Ä—å –Ω–æ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ Supabase Storage')

    def _update_document_records(self, filename, supabase_url):
        """–û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ Document –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤"""
        try:
            avatar_type = DocumentType.objects.get(name='Avatar')
            
            # –ò—â–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –ø—É—Ç–µ–º –∫ —ç—Ç–æ–º—É —Ñ–∞–π–ª—É
            documents = Document.objects.filter(
                document_type=avatar_type,
                file__endswith=filename
            )
            
            for doc in documents:
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –Ω–∞ Supabase URL
                doc.file = supabase_url
                doc.comment = 'Migrated to Supabase Storage'
                doc.save()
                
                self.stdout.write(
                    self.style.SUCCESS(f'    üìù –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å Document ID {doc.id}')
                )
                
        except DocumentType.DoesNotExist:
            pass  # Avatar type –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        except Exception as e:
            self.stdout.write(
                self.style.WARNING(f'    ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è {filename}: {str(e)}')
            )
